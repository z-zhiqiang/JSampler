public class test extends java.lang.Object
{

    public void <init>()
    {
        test this;
        int countdown;

        this := @this: test;
        if countdown > 2 goto label0;

        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(0);
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;

     label0:
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        double i, j, two, z1, $d0;
        boolean bb, $z0;
        int aa, countdown;
        long ll, ll2;
        byte $b0;
        test $r0;

        args := @parameter0: java.lang.String[];
        if countdown > 2 goto label5;

        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(1);
        i = 0.8;
        j = 10.9;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, i, 0);
        two = 2.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, j, 2);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, i, 1);
        goto label3;

     label0:
        j = i - 1.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, two, 4);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, i, 3);
        z1 = 0.77;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(z1, two, 7);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(z1, j, 6);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(z1, i, 5);
        $b0 = z1 cmpg 0.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkBranches(int,int,java.lang.String,int)>($b0, 0, ">=", 0);
        if $b0 >= 0 goto label1;

        two = two + 1.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, z1, 10);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, j, 9);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, i, 8);
        goto label2;

     label1:
        two = two - 1.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, z1, 13);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, j, 12);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(two, i, 11);

     label2:
        i = 1.0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(i, z1, 16);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(i, two, 15);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(i, j, 14);
        j = i + two;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, z1, 19);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, two, 18);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(double,double,int)>(j, i, 17);

     label3:
        $b0 = j cmpl i;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkBranches(int,int,java.lang.String,int)>($b0, 0, ">", 1);
        if $b0 > 0 goto label0;

        bb = 1;
        $r0 = new test;
        specialinvoke $r0.<test: void <init>()>();
        $z0 = $r0 instanceof test;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>($z0, bb, 20);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkBranches(int,int,java.lang.String,int)>($z0, 0, "==", 2);
        if $z0 == 0 goto label4;

        bb = 0;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>(bb, $z0, 21);

     label4:
        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(4.0, 2.0);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkReturns(double,int)>($d0, 0);
        aa = (int) $d0;
        ll = 5L;
        ll2 = (long) j;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(long,long,int)>(ll2, ll, 22);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void exportReports(java.lang.String,java.lang.String)>("./output.reports", "8918D57B756E82EFBA48F5833FA65C60");
        return;

     label5:
        i = 0.8;
        j = 10.9;
        two = 2.0;
        goto label9;

     label6:
        j = i - 1.0;
        z1 = 0.77;
        $b0 = z1 cmpg 0.0;
        if $b0 >= 0 goto label7;

        two = two + 1.0;
        goto label8;

     label7:
        two = two - 1.0;

     label8:
        i = 1.0;
        j = i + two;

     label9:
        $b0 = j cmpl i;
        if $b0 > 0 goto label6;

        bb = 1;
        $r0 = new test;
        specialinvoke $r0.<test: void <init>()>();
        $z0 = $r0 instanceof test;
        if $z0 == 0 goto label10;

        bb = 0;

     label10:
        $d0 = staticinvoke <java.lang.Math: double pow(double,double)>(4.0, 2.0);
        aa = (int) $d0;
        ll = 5L;
        ll2 = (long) j;
        return;
    }
}
