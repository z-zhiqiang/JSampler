public class LoopTest extends java.lang.Object
{

    public void <init>()
    {
        LoopTest this;
        boolean _toSampleLocal_functionentry;

        this := @this: LoopTest;
        _toSampleLocal_functionentry = staticinvoke <edu.uci.jsampler.assist.SampleChecker: boolean toSample()>();
        if _toSampleLocal_functionentry == 0 goto label0;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkMethodEntries(int)>(0);
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;

     label0:
        nop;
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        int i, j, $i0;
        java.io.PrintStream $r0;
        boolean _toSampleLocal_functionentry, _toSampleLocal_loop_0, _toSampleLocal_loop_1;

        args := @parameter0: java.lang.String[];
        _toSampleLocal_functionentry = staticinvoke <edu.uci.jsampler.assist.SampleChecker: boolean toSample()>();
        if _toSampleLocal_functionentry == 0 goto label6;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkMethodEntries(int)>(1);
        i = 0;
        goto label5;

     label0:
        j = 0;
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, i, 0);
        goto label3;

     label1:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $i0 = i + j;
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>($i0, j, 2);
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>($i0, i, 1);
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);
        j = j + 1;
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, $i0, 4);
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, i, 3);

     label2:
        _toSampleLocal_loop_0 = staticinvoke <edu.uci.jsampler.assist.SampleChecker: boolean toSample()>();
        if _toSampleLocal_loop_0 == 0 goto label9;

     label3:
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkBranches(int,int,java.lang.String,int)>(j, 10, "<", 0);
        if j < 10 goto label1;

        i = i + 1;
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(i, j, 5);

     label4:
        _toSampleLocal_loop_1 = staticinvoke <edu.uci.jsampler.assist.SampleChecker: boolean toSample()>();
        if _toSampleLocal_loop_1 == 0 goto label10;

     label5:
        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkBranches(int,int,java.lang.String,int)>(i, 10, "<", 1);
        if i < 10 goto label0;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void exportReports(java.lang.String,java.lang.String)>("./output.reports", "D17F48B01A6A7F9867CC9029C847EE80");
        return;

     label6:
        nop;
        i = 0;
        goto label10;

     label7:
        j = 0;
        goto label9;

     label8:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $i0 = i + j;
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);
        j = j + 1;
        goto label2;

     label9:
        if j < 10 goto label8;

        i = i + 1;
        goto label4;

     label10:
        if i < 10 goto label7;

        return;
    }
}
