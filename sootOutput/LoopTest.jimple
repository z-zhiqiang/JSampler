public class LoopTest extends java.lang.Object
{

    public void <init>()
    {
        LoopTest this;
        int _localCountdown;

        this := @this: LoopTest;
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getCountdown()>();
        if _localCountdown > 1 goto label1;

        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label0;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkMethodEntries(int)>(0);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label0:
        specialinvoke this.<java.lang.Object: void <init>()>();
        staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: void setCountdown(int)>(_localCountdown);
        return;

     label1:
        _localCountdown = _localCountdown - 1;
        specialinvoke this.<java.lang.Object: void <init>()>();
        staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: void setCountdown(int)>(_localCountdown);
        return;
    }

    public static void main(java.lang.String[])
    {
        java.lang.String[] args;
        int i, j, $i0, _localCountdown;
        java.io.PrintStream $r0;

        args := @parameter0: java.lang.String[];
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getCountdown()>();
        if _localCountdown > 9 goto label13;

        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label0;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkMethodEntries(int)>(1);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label0:
        i = 0;
        goto label11;

     label1:
        j = 0;
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label2;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, i, 0);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label2:
        goto label8;

     label3:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $i0 = i + j;
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label4;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>($i0, j, 2);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label4:
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label5;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>($i0, i, 1);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label5:
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);
        j = j + 1;
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label6;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, $i0, 4);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label6:
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label7;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(j, i, 3);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label7:
        if _localCountdown > 5 goto label16;

     label8:
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label9;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkBranches(int,int,java.lang.String,int)>(j, 10, "<", 0);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label9:
        if j < 10 goto label3;

        i = i + 1;
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label10;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkScalarPairs(int,int,int)>(i, j, 5);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label10:
        if _localCountdown > 8 goto label17;

     label11:
        _localCountdown = _localCountdown - 1;
        if _localCountdown != 0 goto label12;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void checkBranches(int,int,java.lang.String,int)>(i, 10, "<", 1);
        _localCountdown = staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: int getNextCountdown(int)>(3);

     label12:
        if i < 10 goto label1;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void exportReports(java.lang.String,java.lang.String)>("./output.reports", "48DE50025ED4A61A1893DBE3E448D104");
        staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: void setCountdown(int)>(_localCountdown);
        return;

     label13:
        _localCountdown = _localCountdown - 9;
        i = 0;
        goto label17;

     label14:
        j = 0;
        goto label16;

     label15:
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $i0 = i + j;
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);
        j = j + 1;
        goto label7;

     label16:
        _localCountdown = _localCountdown - 5;
        if j < 10 goto label15;

        i = i + 1;
        goto label10;

     label17:
        _localCountdown = _localCountdown - 8;
        if i < 10 goto label14;

        staticinvoke <edu.uci.jsampler.assist.PredicateCheckerReporter: void exportReports(java.lang.String,java.lang.String)>("./output.reports", "48DE50025ED4A61A1893DBE3E448D104");
        staticinvoke <edu.uci.jsampler.assist.GlobalCountdown: void setCountdown(int)>(_localCountdown);
        return;
    }
}
