public class HelloWorld extends java.lang.Object
{
    private int field;
    private int field2;

    public void <init>()
    {
        HelloWorld this;

        this := @this: HelloWorld;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(7);
        specialinvoke this.<java.lang.Object: void <init>()>();
        return;
    }

    public void <init>(int)
    {
        HelloWorld this;
        int i, tmp7;

        this := @this: HelloWorld;
        i := @parameter0: int;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(8);
        specialinvoke this.<java.lang.Object: void <init>()>();
        this.<HelloWorld: int field> = i;
        tmp7 = this.<HelloWorld: int field>;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>(tmp7, i, 28);
        return;
    }

    public void invoke(int)
    {
        HelloWorld this;
        int i, $i0, tmp15;

        this := @this: HelloWorld;
        i := @parameter0: int;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(9);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkBranches(int,int,java.lang.String,int)>(i, 1, "!=", 1);
        if i != 1 goto label0;

        virtualinvoke this.<HelloWorld: void hello()>();
        goto label1;

     label0:
        virtualinvoke this.<HelloWorld: void nohello()>();

     label1:
        $i0 = virtualinvoke this.<HelloWorld: int getField()>();
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkReturns(int,int)>($i0, 4);
        this.<HelloWorld: int field2> = $i0;
        tmp15 = this.<HelloWorld: int field2>;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>(tmp15, $i0, 30);
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>(tmp15, i, 29);
        return;
    }

    public void invoke3()
    {
        HelloWorld this;
        java.io.PrintStream $r0;
        int $i0;

        this := @this: HelloWorld;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(10);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        $i0 = this.<HelloWorld: int field>;
        virtualinvoke $r0.<java.io.PrintStream: void println(int)>($i0);
        return;
    }

    public void hello()
    {
        HelloWorld this;
        java.io.PrintStream $r0;

        this := @this: HelloWorld;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(11);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println(java.lang.String)>("Hello world!");
        return;
    }

    public void nohello()
    {
        HelloWorld this;
        java.io.PrintStream $r0;

        this := @this: HelloWorld;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(12);
        $r0 = <java.lang.System: java.io.PrintStream out>;
        virtualinvoke $r0.<java.io.PrintStream: void println()>();
        return;
    }

    public int getField()
    {
        HelloWorld this;
        int $i0;

        this := @this: HelloWorld;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(13);
        $i0 = this.<HelloWorld: int field>;
        return $i0;
    }

    public void setField(int)
    {
        HelloWorld this;
        int field, tmp5;

        this := @this: HelloWorld;
        field := @parameter0: int;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkMethodEntries(int)>(14);
        this.<HelloWorld: int field> = field;
        tmp5 = this.<HelloWorld: int field>;
        staticinvoke <edu.uci.jsampler.instrument.StaticCheckerReporter: void checkScalarPairs(int,int,int)>(tmp5, field, 31);
        return;
    }
}
